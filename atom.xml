<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>🚀 Charlie Fei&#39;s Blog ~ ❥(^_-)</title>
  
  <subtitle>🚀 Charlie Fei</subtitle>
  <link href="https://programmercharlie.github.io/atom.xml" rel="self"/>
  
  <link href="https://programmercharlie.github.io/"/>
  <updated>2022-12-05T06:25:00.000Z</updated>
  <id>https://programmercharlie.github.io/</id>
  
  <author>
    <name>Charlie Fei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NodeJS的安装及配置</title>
    <link href="https://programmercharlie.github.io/2022/12/05/Nodejs/"/>
    <id>https://programmercharlie.github.io/2022/12/05/Nodejs/</id>
    <published>2022-12-05T06:25:00.000Z</published>
    <updated>2022-12-05T06:25:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="windows安装"><a href="#windows安装" class="headerlink" title="windows安装"></a>windows安装</h2><blockquote><p>Node.js 官方网站下载：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a><br>LTS 长期支持版 ： 实际业务开发中使用 ，稳定 安全<br>current 最新版 ： 尝鲜与学习新特性使用 ，包含最新特性<br>Node中文网 ： <a href="http://nodejs.cn/">http://nodejs.cn/</a>  </p></blockquote><p><img src="https://files.catbox.moe/jfiqbc.png" alt="install"></p><p>点击安装包下载，安装node</p><blockquote><p>PS：默认安装到C盘 不建议修改路径<br>安装完后，可以在命令行cmd中输入node -v 来查看安装版本和是否安装成功</p></blockquote><p><img src="https://files.catbox.moe/6neiep.png" alt="cmd"></p><h2 id="Mac-OS-上安装"><a href="#Mac-OS-上安装" class="headerlink" title="Mac OS 上安装"></a>Mac OS 上安装</h2><blockquote><p>可以通过以下两种方式在 Mac OS 上来安装 node：</p><ul><li>在官方下载网站下载 pkg 安装包，直接点击安装即可。</li><li>使用 brew 命令来安装： </li></ul> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure></blockquote><h2 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h2><ul><li>CMD 全称 command，即命令提示符，是微软Windows系统的命令行程序（可解释为<br>Commander.exe），类似于微软的 DOS 操作系统。</li><li>PowerShell Win10下新增的管理工具,是一种跨平台的任务自动化和配置管理框架，由命令行管理<br>程序和脚本语言组成</li><li>Vscode//Webstorm etc. 内置终端  </li></ul><h3 id="CMD基础命令"><a href="#CMD基础命令" class="headerlink" title="CMD基础命令"></a>CMD基础命令</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /? #获取使用帮助</span><br><span class="line"><span class="built_in">cd</span> \ #跳转到硬盘的根目录</span><br><span class="line"><span class="built_in">cd</span> C:\WINDOWS #跳转到当前硬盘的其他文件</span><br><span class="line"><span class="function">d: #跳转到其他硬盘</span></span><br><span class="line"><span class="function"><span class="title">cd</span> /<span class="title">d</span> <span class="title">e</span>:\<span class="title">software</span> #跳转到其他硬盘的其他文件夹 注意此处必须加/<span class="title">d</span>参数。否则无法跳转。</span></span><br><span class="line"><span class="function"><span class="title">cd</span>.. #跳转到上一层目录</span></span><br><span class="line"><span class="function"><span class="title">ipconfig</span> #展示当前<span class="title">TCP</span>/<span class="title">IP</span>协议设置值 主要用来查看<span class="title">IP</span>地址 子网掩码 网关</span></span><br><span class="line"><span class="function"><span class="title">dir</span> #查看查看当前目录下的文件与文件夹信息</span></span><br><span class="line"><span class="function"><span class="title">edit</span> <span class="title">filename</span> #修改文件中的内容（英文模式）</span></span><br><span class="line"><span class="function"><span class="title">notepad</span> <span class="title">filename</span> #修改文件中的内容（中文模式）</span></span><br><span class="line"><span class="function"><span class="title">copy</span> <span class="title">filename</span> <span class="title">foldername</span> #复制文件到指定文件夹</span></span><br><span class="line"><span class="function"><span class="title">del</span> <span class="title">filename</span> #删除文件</span></span><br><span class="line"><span class="function"><span class="title">move</span> <span class="title">filename</span> <span class="title">foldername</span> #移动文件到指定文件夹（剪切）</span></span><br><span class="line"><span class="function"><span class="title">mkdir</span>/<span class="title">md</span> <span class="title">foldername</span> #建立新的文件夹</span></span><br></pre></td></tr></table></figure><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><p>npm,全称【node package management】，是nodejs内置的软件包管理器。毫无疑问，npm是用来<br>管理软件包的。<br>它是世界上最大的软件注册表，每星期大约有30亿次的下载量，包含超过600000个包(包)(即，代码模<br>块)。来自各大洲的开源软件开发者使用NPM互相分享和借鉴.包的结构使您能够轻松跟踪依赖项和版<br>本。  </p><h3 id="npm的使用方法"><a href="#npm的使用方法" class="headerlink" title="npm的使用方法"></a>npm的使用方法</h3><p>因为nodejs软件内置了npm，所以windows系统在安装nodejs后，打开cmd即可使用npm下载资源</p><ul><li>查看npm安装信息与默认下载路径  </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config ls</span><br></pre></td></tr></table></figure><ul><li>查看全局默认目录  </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm root -g</span><br></pre></td></tr></table></figure><ol><li>修改全局与缓存地址<br>在D盘 nodejs 目录下创建两个目录，分别是 node_cache 和 node_global，这是用来放安装过程的缓存文<br>件以及最终的模块配置位置。配置完成后，cmd中执行下面这两个命令：  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\Program Files\nodejs\node_global&quot;</span><br><span class="line">npm config set cache &quot;D:\Program Files\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure><ol start="2"><li>修改环境变量<br>配置 npm 的环境变量和 nodejs 的环境变量。在计算机图标上点右键，选属性，然后点击高级系统<br>配置，弹出来的新窗口右下角有个环境路径，点击去，就能看到环境路径的配置界面，我们点击新<br>建。然后在弹出来的窗口里，变量名填：NODE_PATH<br>获取<br>变量值填：D:\Program Files\nodejs\node_modules<br>点击确定<br>编辑Path变量<br>找到npm项修改为：D:\Program Files\nodejs\node_global\  </li></ol><ol start="3"><li>修改仓库地址<br>命令:  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">//或者</span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line">/*</span><br><span class="line">registry_url指的是国内提供的一些npm仓库地址，常用的有：</span><br><span class="line">https://registry.npm.taobao.org</span><br><span class="line">http://r.cnpmjs.org/</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h3 id="npm常用的命令："><a href="#npm常用的命令：" class="headerlink" title="npm常用的命令："></a>npm常用的命令：</h3><ol><li>安装包（如果没有指定版本号，那么安装最新版本） </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g 包名称（全局安装）</span><br><span class="line">npm install包名称（本地安装）</span><br></pre></td></tr></table></figure><ol start="2"><li>安装包的时候可以指定版本  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g 包名称@版本号</span><br></pre></td></tr></table></figure><ol start="3"><li>卸载包  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall -g 包名称</span><br></pre></td></tr></table></figure><ol start="4"><li>更新包（更新到最新版本）  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update -g 包名称</span><br></pre></td></tr></table></figure><ol start="5"><li>查看全局模块列表  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm list -g</span><br></pre></td></tr></table></figure><ol start="6"><li>查看包所依赖的Node的版本  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm view 包名称 engines</span><br></pre></td></tr></table></figure><ol start="7"><li>查看包源文件地址  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm view 包名称 repository.url</span><br></pre></td></tr></table></figure><blockquote><p>开发环境（平时开发使用的环境）<br>生产环境（项目部署上线之后的服务器环境）<br>–save 向生产环境添加依赖 dependencies<br>–save-dev 向开发环境添加依赖 devDependencies  </p></blockquote><p>区别：</p><ul><li><p>npm install xxx 安装到项目目录的node_modules文件夹下，但是不会添加任何依赖（依赖写在<br>package.json文件中）</p></li><li><p>npm install xxx -g 全局安装，安装到你安装npm的磁盘目录下</p></li><li><p>npm install xxx –save 安装到项目目录的node_modules文件夹下，添加到dependencies的依赖下<br>（生产环境中：项目发布到服务器上必须要使用的包）</p></li><li><p>npm install xxx –save-dev 安装到项目目录的node_modules文件夹下，添加到devdependencies的依<br>赖下（开发环境中：测试、管理，只在程序员模式下需要）  </p></li></ul>]]></content>
    
    
    <summary type="html">对NodeJS的安装及配置进行详细记录，并记载了一些npm命令</summary>
    
    
    
    <category term="前端开发" scheme="https://programmercharlie.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="NodeJS" scheme="https://programmercharlie.github.io/tags/NodeJS/"/>
    
  </entry>
  
  <entry>
    <title>Linux操作系统环境的安装与部署</title>
    <link href="https://programmercharlie.github.io/2022/12/05/Linux/"/>
    <id>https://programmercharlie.github.io/2022/12/05/Linux/</id>
    <published>2022-12-04T16:00:00.000Z</published>
    <updated>2022-12-04T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux操作系统"><a href="#Linux操作系统" class="headerlink" title="Linux操作系统"></a>Linux操作系统</h1><blockquote><p>操作系统是管理计算机硬件与软件资源的计算机程序，操作系统可以对计算机系统的各项资源板块开展调度工作，运用计算机操作系统可以减少人工资源分配的工作强度。</p></blockquote><h2 id="安装Ubuntu系统"><a href="#安装Ubuntu系统" class="headerlink" title="安装Ubuntu系统"></a>安装Ubuntu系统</h2><p>这里我们就以安装虚拟机的方式在我们的电脑上安装Linux操作系统，我们选用Ubuntu作为操作系统，如果有经济实力，可以在腾讯云、阿里云之类的服务商购买一台云服务器，并选择预装Ubuntu系统；如果你还想搞嵌入式开发之类的工作，可以购买一台树莓派服务器，也可以在上面安装Ubuntu系统，相当于一台迷你主机。在你已经有云服务器的情况下，可以直接跳过虚拟机安装教学。</p><p>官网下载：<a href="https://cn.ubuntu.com/download/server/step1">https://cn.ubuntu.com/download/server/step1</a></p><p>注意是下载服务器版本，不是桌面版本。</p><h3 id="在虚拟机中安装"><a href="#在虚拟机中安装" class="headerlink" title="在虚拟机中安装"></a>在虚拟机中安装</h3><p>这里我们使用VMware进行安装，VMware是一个虚拟化应用程序，它可以在我们当前运行的操作系统之上，创建一个虚线的主机，相当于创建了一台电脑，而我们就可以在这台电脑上安装各种各样的操作系统，并且我们可以自由为其分配CPU核心和内存以及硬盘容量（如果你接触过云计算相关内容，应该会对虚拟化技术有所了解）</p><p>官网下载：<a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html</a></p><p>安装完成后，会出现一个类似于CMD的命令窗口，而我们就是通过输入命令来操作我们的操作系统。</p><h3 id="使用SSH远程连接"><a href="#使用SSH远程连接" class="headerlink" title="使用SSH远程连接"></a>使用SSH远程连接</h3><p>如果你使用的是树莓派或是云服务器，那么你会得到一个公网的IP地址，以及默认的用户名和密码，由于服务器安装的Ubuntu并不是在我们的电脑上运行的，那么我们怎么去远程操作呢？</p><p>比如我们要远程操作一台Windows电脑，直接使用远程桌面连接即可，但是Ubuntu上来就是命令行，这种情况下要实现远程连接就只能使用SSH终端。</p><p>SSH是一种网络协议，用于计算机之间的加密登录。如果一个用户从本地计算机，使用SSH协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露。最早的时候，互联网通信都是明文通信，一旦被截获，内容就暴露无疑。1995年，芬兰学者Tatu Ylonen设计了SSH协议，将登录信息全部加密，成为互联网安全的一个基本解决方案，迅速在全世界获得推广，目前已经成为Linux系统的标准配置。</p><p>云服务器上安装的Ubuntu默认都是自带了OpenSSH服务端的，我们可以直接连接，如果你的Ubuntu服务器上没有安装OpenSSH服务器端，那么可以输入命令进行安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openssh-server</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输入后还需要你输入当前用户的密码才可以执行，至于为什么我们后面会说</span></span><br></pre></td></tr></table></figure><p>这里我们使用XShell来进行SSH登陆，官网：<a href="https://www.netsarang.com/zh/free-for-home-school/">https://www.netsarang.com/zh/free-for-home-school/</a></p><h3 id="文件系统介绍"><a href="#文件系统介绍" class="headerlink" title="文件系统介绍"></a>文件系统介绍</h3><p>在Windows下，我们的整个硬盘实际上可以被分为多个磁盘驱动器：</p><p><img src="https://img-blog.csdnimg.cn/20190415191752939.png" alt="在这里插入图片描述"></p><p>我们一般习惯将软件装到D盘，文件数据存在E盘，系统和一些环境安装在C盘，根据不同的盘符进行划分，并且每个盘都有各自的存储容量大小。而在Linux中，没有这个概念，所有的文件都是位于根目录下的：</p><p><img src="https://upload-images.jianshu.io/upload_images/17163728-8d41eb59e5cfb7ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/904" alt="img"></p><p>我们可以看到根目录下有很多个文件夹，它们都有着各自的划分：</p><ul><li>/bin 可执行二进制文件的目录，如常用的命令 ls、tar、mv、cat 等实际上都是一些小的应用程序</li><li>/home 普通用户的主目录，对应Windows下的C:/Users/用户名/</li><li>/root root用户的主目录（root用户是具有最高权限的用户，之后会讲）</li><li>/boot 内核文件的引导目录, 放置 linux 系统启动时用到的一些文件</li><li>/sbing 超级用户使用的指令文件</li><li>/tmp 临时文件目录，一般用户或正在执行的程序临时存放文件的目录，任何人都可以访问，重要数据不可放置在此目录下。</li><li>/dev 设备文件目录，在Linux中万物皆文件，实际上你插入的U盘等设备都会在dev目录下生成一个文件，我们可以很方便地通过文件IO方式去操作外设，对嵌入式开发极为友好。</li><li>/lib 共享库，系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助。</li><li>/usr 第三方 程序目录</li><li>/etc 配置程序目录，系统配置文件存放的目录</li><li>/var 可变文件，放置系统执行过程中经常变化的文件</li><li>/opt 用户使用目录，给主机额外安装软件所摆放的目录。</li></ul><p>我们可以直接输入命令来查看目录下的所有文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">只显示文件名称，且不显示隐藏文件</span></span><br><span class="line">ls</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示隐藏文件以及文件详细信息</span></span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p>那么我们如何才能像Windows那样方便的管理Linux中的文件呢？我们可以使用FTP管理工具，默认情况下Ubuntu是安装了SFTP服务器的。</p><p>这里我们使用Xftp来进行管理，官网：<a href="https://www.netsarang.com/zh/free-for-home-school/">https://www.netsarang.com/zh/free-for-home-school/</a></p><hr><h2 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h2><p>我们整个Linux阶段的学习主要是以实操为主，大量的命令需要大量的使用才能记得更牢固。</p><p>Linux系统是一个多用户多任务的分时操作系统，任何一个要使用系统的用户，都必须申请一个账号，然后以这个账号的身份进入系统。比如我们之前就是使用我们在创建服务器时申请的初始用户test，通过输入用户名和密码登录到系统中，之后才能使用各种命令进行操作。其实用户机制和我们的Windows比较类似。一般的普通用户只能做一些比较基本的操作，并且只能在自己的目录（如/home/test）中进行文件的创建和删除操作。</p><p>我们可以看到，当前状态信息分为三段：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$</span><br></pre></td></tr></table></figure><p>格式为：用户名@服务器名称:当前所处的目录$，其中~代表用户目录，如果不是用户目录，会显示当前的绝对路径地址。我们也可以使用<code>pwd</code>命令来直接查看当前所处的目录。</p><p>在Linux中默认存在一个超级用户root，而此用户拥有最高执行权限，它能够修改任何的内容，甚至可以删除整个Linux内核，正常情况下不会使用root用户进行登陆，只有在特殊情况下才会使用root用户来进行一些操作，root用户非常危险，哪怕一个小小的命令都能够毁掉整个Linux系统，比如<code>rm -rf /*</code>，感兴趣的话我们可以放在最后来演示（在以前老是听说安卓手机root，实际上就是获取安卓系统底层Linux系统的root权限，以实现修改系统文件的目的）</p><p>我们可以使用<code>sudo -s</code>并输入当前用户的密码切换到root用户，可以看到出现了一些变化：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$</span><br><span class="line"></span><br><span class="line">root@ubuntu-server:/home/test#</span><br></pre></td></tr></table></figure><p>我们发现<code>$</code>符号变成了<code>#</code>符号，注意此符号表示当前的用户权限等级，并且test也变为了root，在此用户下，我们可以随意修改test用户文件夹以外的内容，而test用户下则无法修改。如果需要退出root用户，直接输入<code>exit</code>即可。</p><p>接着我们来看一下，如何进行用户的管理操作，进行用户管理，包括添加用户和删除用户都需要root权限才可以执行，但是现在我们是test用户，我们可以在命令前面添加<code>sudo</code>来暂时以管理员身份执行此命令，比如说我们现在想要添加一个新的用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd study</span><br></pre></td></tr></table></figure><p>其中<code>study</code>就是我们想要创建的新用户，<code>useradd</code>命令就是创建新用户的命令，同样的，删除用户：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo userdel study</span><br></pre></td></tr></table></figure><p>Linux中的命令一般都可以携带一些参数来以更多特地的方式执行，我们可以在创建用户时，添加一些额外的参数来进行更多高级操作：</p><ul><li>-d&lt;登录目录&gt; 　指定用户登录时的起始目录。</li><li>-g&lt;群组&gt; 　指定用户所属的群组。</li><li>-G&lt;群组&gt; 　指定用户所属的附加群组。</li><li>-m 　自动建立用户的登入目录。</li><li>-M 　不要自动建立用户的登入目录。</li><li>-s  指定Shell，一般指定为/bin/bash</li></ul><p>如果还想查看更多命令，可以直接使用<code>man</code>来查看命令的详细参数列表，比如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man useradd</span><br></pre></td></tr></table></figure><p>比如我们现在需要在用户创建时顺便创建用户的文件夹，并指定shell（任意一种命令解释程序，用于处理我们输入的命令）为bash：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd study -m -s /bin/bash</span><br></pre></td></tr></table></figure><p>可以看到已经自动在home目录下创建了study文件夹（这里..表示上一级目录，.表示当前目录）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ ls ..</span><br><span class="line">study  test</span><br></pre></td></tr></table></figure><p>用户创建完成之后，我们可以为此用户设定密码（如果不指定用户，那么会设置当前用户的密码）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd study</span><br></pre></td></tr></table></figure><p>输入密码之后，我们可以使用命令来切换用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ su - study</span><br><span class="line">Password: </span><br><span class="line">study@ubuntu-server:~$ </span><br></pre></td></tr></table></figure><p>可以看到，切换用户后名称已经修改为study了，我们使用<code>exit</code>即可退出当前用户回到test。</p><p>输入<code>who</code>可以查看当前登录账号（注意是登录的账号）输入<code>whoami</code>可以查看当前的操作账号：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ su study</span><br><span class="line">Password: </span><br><span class="line">study@ubuntu-server:/home/test$ cd ~</span><br><span class="line">study@ubuntu-server:~$ who</span><br><span class="line">test     pts/0        2022-01-24 03:57 (192.168.10.3)</span><br><span class="line">study@ubuntu-server:~$ whoami</span><br><span class="line">study</span><br><span class="line">study@ubuntu-server:~$ </span><br></pre></td></tr></table></figure><p>接着我们来看用户组，每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。我们可以输入<code>groups</code>来查看当前用户所有的用户组：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">groups</span></span><br><span class="line"><span class="built_in">test</span> adm cdrom sudo dip plugdev lxd</span><br></pre></td></tr></table></figure><p>我们可以输入<code>id</code>来查看用户所属的用户相关信息：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">id</span></span><br><span class="line">uid=1000(<span class="built_in">test</span>) gid=1000(<span class="built_in">test</span>) <span class="built_in">groups</span>=1000(<span class="built_in">test</span>),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),116(lxd)</span><br></pre></td></tr></table></figure><p>我们可以看到test用户默认情况下主要用户组为同名的test用户组，并且还属于一些其他的用户组，其中sudo用户组就表示可以执行<code>sudo</code>命令，我们发现我们创建的study用户没有sudo的执行权限：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">study@ubuntu-server:~$ sudo -s</span><br><span class="line">[sudo] password <span class="keyword">for</span> study: </span><br><span class="line">study is not <span class="keyword">in</span> the sudoers file.  This incident will be reported.</span><br></pre></td></tr></table></figure><p>正是因为没有加入到sudo用户组，这里我们来尝试将其添加到sudo用户组：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">id</span> study</span><br><span class="line">uid=1001(study) gid=1001(study) <span class="built_in">groups</span>=1001(study)</span><br></pre></td></tr></table></figure><p>使用<code>usermod</code>命令来对用户的相关设置进行修改，参数与useradd大致相同：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ sudo usermod study -G sudo</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">id</span> study</span><br><span class="line">uid=1001(study) gid=1001(study) <span class="built_in">groups</span>=1001(study),27(sudo)</span><br></pre></td></tr></table></figure><p>接着切换到study用户就可以使用sudo命令了：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">To run a <span class="built_in">command</span> as administrator (user <span class="string">&quot;root&quot;</span>), use <span class="string">&quot;sudo &lt;command&gt;&quot;</span>.</span><br><span class="line">See <span class="string">&quot;man sudo_root&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">study@ubuntu-server:/home/test$ sudo -s</span><br><span class="line">[sudo] password <span class="keyword">for</span> study: </span><br><span class="line">root@ubuntu-server:/home/test<span class="comment"># </span></span><br></pre></td></tr></table></figure><p>实际上，我们的用户信息是存储在配置文件中的，我们之前说了，配置文件一般都放在etc目录下，而用户和用户组相关的配置文件，存放在<code>/etc/passwd</code>和<code>/etc/group</code>中，我们可以使用cat命令将文件内容打印到控制台：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">cat</span> /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:4:65534:<span class="built_in">sync</span>:/bin:/bin/sync</span><br></pre></td></tr></table></figure><p>格式为：<code>注册名:口令:用户标识号:组标识号:用户名:用户主目录:命令解释程序 </code>，而我们的密码则存放在<code>/etc/shadow</code>中，是以加密形式存储的，并且需要root权限才能查看。</p><hr><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>接着我们来看一下Linux系统中一些比较常用的命令。</p><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><p>文件是最基本的内容，我们可以使用ls命令列出当前目录中所有的文件，参数-a表示包含所有的隐藏文件，-l表示列出详细信息：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span> -al</span><br><span class="line">total 44</span><br><span class="line">drwxr-xr-x 4 <span class="built_in">test</span> <span class="built_in">test</span> 4096 Jan 24 08:55 .</span><br><span class="line">drwxr-xr-x 4 root root 4096 Jan 24 04:24 ..</span><br><span class="line">-rw------- 1 <span class="built_in">test</span> <span class="built_in">test</span> 2124 Jan 24 04:29 .bash_history</span><br><span class="line">-rw-r--r-- 1 <span class="built_in">test</span> <span class="built_in">test</span>  220 Feb 25  2020 .bash_logout</span><br><span class="line">-rw-r--r-- 1 <span class="built_in">test</span> <span class="built_in">test</span> 3771 Feb 25  2020 .bashrc</span><br><span class="line">drwx------ 2 <span class="built_in">test</span> <span class="built_in">test</span> 4096 Jan 21 15:48 .cache</span><br><span class="line">drwx------ 3 <span class="built_in">test</span> <span class="built_in">test</span> 4096 Jan 23 14:49 .config</span><br><span class="line">-rw-r--r-- 1 <span class="built_in">test</span> <span class="built_in">test</span>  807 Feb 25  2020 .profile</span><br><span class="line">-rw------- 1 <span class="built_in">test</span> <span class="built_in">test</span>   34 Jan 24 04:17 .python_history</span><br><span class="line">-rw-r--r-- 1 <span class="built_in">test</span> <span class="built_in">test</span>    0 Jan 21 15:52 .sudo_as_admin_successful</span><br><span class="line">-rw------- 1 <span class="built_in">test</span> <span class="built_in">test</span> 7201 Jan 24 08:55 .viminfo</span><br></pre></td></tr></table></figure><p>可以看到当前目录下的整个文件列表，那么这些信息各种代表什么意思呢，尤其是最前面那一栏类似于<code>drwxr-xr-x</code>的字符串。</p><p>它表示文件的属性，其中第1个字符表示此文件的类型：<code>-</code>表示普通文件，<code>l</code>为链接文件，<code>d</code>表示目录（文件夹），<code>c</code>表示字符设备、<code>b</code>表示块设备，还有<code>p</code>有名管道、<code>f</code>堆栈文件、<code>s</code>套接字等，这些一般都是用于进程之间通信使用的。</p><p>第2-4个字符表示文件的拥有者（User）对该文件的权限，第5-7个字符表示文件所属用户组（Group）内用户对该文件的权限，最后8-10个字符表示其他用户（Other）对该文件的权限。其中<code>r</code>为读权限、<code>w</code>为写权限、<code>x</code>为执行权限，为了方便记忆，直接记UGO就行了。</p><p>比如<code>drwxr-xr-x</code>就表示这是一个目录，文件的拥有者可以在目录中读、写和执行，而同一用户组的其他用户只能读和执行，其他用户也是一样。</p><p>第二栏数据可以看到是一列数字，它表示文件创建的链接文件（快捷方式）数量，一般只有1表示只有当前文件，我们也可以尝试创建一个链接文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ln</span> .bash_logout kk</span><br></pre></td></tr></table></figure><p>创建后，会生成一个名为kk的文件，我们对此文件的操作相当于直接操作.bash_logout，跟Windows中的快捷方式比较类似，了解一下即可。再次执行<code>ll</code>命令，可以看到.bash_logout的链接数变成了2。</p><p>第三栏数据为该文件或是目录的拥有者。</p><p>第四栏数据表示所属的组。</p><p>第五栏数据表示文件大小，以字节为单位。</p><p>第六栏数据为文件的最后一次修改时间</p><p>最后一栏就是文件名称了，就不多说了，再次提及..表示上级目录，.表示当前目录，最前面有一个.开头的文件为隐藏文件。可以看到上级目录（也就是/home目录）所有者为root，并且非root用户无法进行写操作，只能执行读操作，而当前目录以及目录下所有文件则属于test用户，test用户可以随意进行修改。</p><p>在了解了Linux的文件查看之后再去看Windows的文件管理，会觉得Windows的太拉了：</p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg0.pconline.com.cn%2Fpconline%2F2107%2F02%2F14306786_05_thumb.jpg&refer=http%3A%2F%2Fimg0.pconline.com.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1645608268&t=75ea125c46cb38b22268156794b986d4" alt="img"></p><p>那么，如果我们希望对文件的属性进行修改，比如我们现在希望将某个文件的写权限给关闭，可以使用<code>chmod</code>命令来进行文件属性修改，我们先创建一个test文件，使用<code>touch</code>命令来创建文件，使用<code>mkdir</code>命令来创建目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ touch test</span><br><span class="line">test@ubuntu-server:~$ ll test</span><br><span class="line">-rw-rw-r-- 1 test test 0 Jan 24 09:32 test</span><br></pre></td></tr></table></figure><p>可以看到文件创建之后的默认权限为可读可写，接着我们来将其修改为只读，chmod的使用方法如下：</p><ul><li>chmod (u/g/o/a)(+/-)(r/w/x) 文件名称</li></ul><p>我们可以从ugo中选择或是直接a表示所有，+和-表示添加和删除权限，最后rwx不用我说了吧</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">chmod</span> a-w <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ ll <span class="built_in">test</span></span><br><span class="line">-r--r--r-- 1 <span class="built_in">test</span> <span class="built_in">test</span> 0 Jan 24 09:32 <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>除了这种方式之外，我们也可以使用数字来代替，比如现在我要给前两个添加读权限，那么：</p><p>约定：r=4，w=2，x=1，需要什么权限就让对应权限的数字相加，一个数字表示一个rwx的权限状态，比如我们想修改为<code>-rw-rw-r--</code>，那么对应的数字就是<code>664</code>，对应的命令为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">chmod</span> 664 <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ ll <span class="built_in">test</span></span><br><span class="line">-rw-rw-r-- 1 <span class="built_in">test</span> <span class="built_in">test</span> 0 Jan 24 09:32 <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>如果我们想修改文件的拥有者或是所属组，可以使用<code>chown</code>和<code>chgrp</code>命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ sudo <span class="built_in">chown</span> root <span class="built_in">test</span> </span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span> -l</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r-- 1 root <span class="built_in">test</span> 0 Jan 24 10:43 <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ sudo <span class="built_in">chgrp</span> root <span class="built_in">test</span> </span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span> -l</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r-- 1 root root 0 Jan 24 10:43 <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>再次操作该文件，会发现没权限：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">chmod</span> 777 <span class="built_in">test</span> </span><br><span class="line"><span class="built_in">chmod</span>: changing permissions of <span class="string">&#x27;test&#x27;</span>: Operation not permitted</span><br></pre></td></tr></table></figure><p>接着我们来看文件的复制、移动和删除，这里我们先创建一个新的目录并进入到此目录用于操作：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">mkdir</span> study</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">cd</span> study</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study$</span><br></pre></td></tr></table></figure><p>首先我们演示文件的复制操作，文件的复制使用<code>cp</code>命令，比如现在我们想把上一级目录中的test文件复制到当前目录中：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study$ <span class="built_in">cp</span> ../test <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>那么如果我们想要将一整个目录进行复制呢？我们需要添加一个<code>-r</code>参数表示将目录中的文件递归复制：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study$ <span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">cp</span> -r study study_copied</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span> -l</span><br><span class="line">total 8</span><br><span class="line">drwxrwxr-x 2 <span class="built_in">test</span> <span class="built_in">test</span> 4096 Jan 24 10:16 study</span><br><span class="line">drwxrwxr-x 2 <span class="built_in">test</span> <span class="built_in">test</span> 4096 Jan 24 10:20 study_copied</span><br><span class="line">-rw-rw-r-- 1 <span class="built_in">test</span> <span class="built_in">test</span>    0 Jan 24 09:32 <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>可以看到我们的整个目录中所有的文件也一起被复制了。</p><p>接着我们来看看移动操作，相当于是直接将一个文件转移到另一个目录中了，我们再创建一个目录用于文件的移动，并将test文件移动到此目录中，我们使用<code>mv</code>命令进行文件的移动：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">mkdir</span> study2</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">mv</span> <span class="built_in">test</span> study2</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">study  study2  study_copied</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">cd</span> study2</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study2$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>现在我们想要移动个目录到另一个目录中，比如我们想将study目录移动到study2目录中：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">mv</span> study study2</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">study2  study_copied</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">cd</span> study2</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study2$ <span class="built_in">ls</span></span><br><span class="line">study  <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p><code>mv</code>命令不仅能实现文件的移动，还可以实现对文件重命名操作，比如我们想将文件test重命名为yyds，那么直接将其进行移动操作即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study2$ <span class="built_in">ls</span></span><br><span class="line">study  <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study2$ <span class="built_in">mv</span> <span class="built_in">test</span> yyds</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/study2$ <span class="built_in">ls</span></span><br><span class="line">study  yyds</span><br></pre></td></tr></table></figure><p>最后就是删除命令了，使用<code>rm</code>进行删除操作，比如现在我们想删除study2目录（注意需要添加-r参数表示递归删除文件夹中的内容）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">rm</span> -r study2</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">study_copied</span><br></pre></td></tr></table></figure><p>而最常提到的<code>rm -rf /*</code>正是删除根目录下所有的文件（非常危险的操作），-f表示忽略不存在的文件，不进行任何提示，*是一个通配符，表示任意文件。这里我们演示一下删除所有.txt结尾的文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">touch</span> 1.txt 2.txt 3.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">1.txt  2.txt  3.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">rm</span> *.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ </span><br></pre></td></tr></table></figure><p>最后我们再来看文件的搜索，我们使用find命令来进行搜索，比如我想搜索/etc目录下名为passwd的文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ sudo find /etc -name passwd</span><br><span class="line">[sudo] password for test: </span><br><span class="line">/etc/pam.d/passwd</span><br><span class="line">/etc/passwd</span><br></pre></td></tr></table></figure><p>它还支持通配符，比如搜索以s开头的文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ sudo find /etc -name s*</span><br><span class="line">/etc/subuid</span><br><span class="line">/etc/screenrc</span><br><span class="line">/etc/sensors3.conf</span><br><span class="line">/etc/sysctl.conf</span><br><span class="line">/etc/sudoers</span><br><span class="line">/etc/shadow</span><br><span class="line">/etc/skel</span><br><span class="line">/etc/pam.d/su</span><br><span class="line">/etc/pam.d/sshd</span><br><span class="line">/etc/pam.d/sudo</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h3><p>接着我们来查看一些系统管理相关的命令，比如我们Windows中的任务管理器，我们可以使用<code>top</code>命令来打开：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">top - 10:48:46 up  5:52,  1 user,  load average: 0.00, 0.00, 0.00</span><br><span class="line">Tasks: 191 total,   2 running, 189 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.0 us,  0.2 sy,  0.0 ni, 99.8 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">MiB Mem :   3919.1 total,   2704.2 free,    215.0 used,    999.9 buff/cache</span><br><span class="line">MiB Swap:   3923.0 total,   3923.0 free,      0.0 used.   3521.4 avail Mem </span><br><span class="line"></span><br><span class="line">    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND                       </span><br><span class="line">  10528 test      20   0    8944   3072   2652 R   0.7   0.1   0:00.07 top                           </span><br><span class="line">   9847 root      20   0       0      0      0 I   0.3   0.0   0:00.87 kworker/0:0-events            </span><br><span class="line">      1 root      20   0  102760  10456   7120 S   0.0   0.3   0:02.02 systemd                       </span><br><span class="line">      2 root      20   0       0      0      0 S   0.0   0.0   0:00.01 kthreadd                      </span><br><span class="line">      3 root       0 -20       0      0      0 I   0.0   0.0   0:00.00 rcu_gp                        </span><br><span class="line">      4 root       0 -20       0      0      0 I   0.0   0.0   0:00.00 rcu_par_gp                    </span><br><span class="line">      6 root       0 -20       0      0      0 I   0.0   0.0   0:00.00 kworker/0:0H-kblockd          </span><br><span class="line">      8 root       0 -20       0      0      0 I   0.0   0.0   0:00.00 mm_percpu_wq                  </span><br><span class="line">      9 root      20   0       0      0      0 S   0.0   0.0   0:00.15 ksoftirqd/0                   </span><br><span class="line">     10 root      20   0       0      0      0 R   0.0   0.0   0:01.49 rcu_sched                     </span><br><span class="line">     11 root      rt   0       0      0      0 S   0.0   0.0   0:00.24 migration/0                   </span><br><span class="line">     12 root     -51   0       0      0      0 S   0.0   0.0   0:00.00 idle_inject/0                 </span><br><span class="line">     14 root      20   0       0      0      0 S   0.0   0.0   0:00.00 cpuhp/0                       </span><br><span class="line">     15 root      20   0       0      0      0 S   0.0   0.0   0:00.00 cpuhp/1                       </span><br><span class="line">     16 root     -51   0       0      0      0 S   0.0   0.0   0:00.00 idle_inject/1                 </span><br><span class="line">     17 root      rt   0       0      0      0 S   0.0   0.0   0:00.30 migration/1                   </span><br><span class="line">     18 root      20   0       0      0      0 S   0.0   0.0   0:00.07 ksoftirqd/1                   </span><br><span class="line">     20 root       0 -20       0      0      0 I   0.0   0.0   0:00.00 kworker/1:0H-kblockd  </span><br></pre></td></tr></table></figure><p>可以很清楚地看到当前CPU的使用情况以及内存的占用情况。</p><p>按下数字键1，可以展示所有CPU核心的使用情况：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%Cpu0  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">%Cpu1  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br></pre></td></tr></table></figure><p>按下f键可以设置以哪一列进行排序或是显示那些参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Fields Management for window 1:Def, whose current sort field is %MEM</span><br><span class="line">   Navigate with Up/Dn, Right selects for move then &lt;Enter&gt; or Left commits,</span><br><span class="line">   &#x27;d&#x27; or &lt;Space&gt; toggles display, &#x27;s&#x27; sets sort.  Use &#x27;q&#x27; or &lt;Esc&gt; to end!</span><br></pre></td></tr></table></figure><p>按下q键即可退出监控界面。</p><p>我们可以直接输入free命令来查看当前系统的内存使用情况：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           3919         212        2706           1         999        3523</span><br><span class="line">Swap:          3922           0        3922</span><br></pre></td></tr></table></figure><p>其中-m表示以M为单位，也可以-g表示以G为单位，默认是kb为单位。</p><p>最后就是磁盘容量，我们可以使用<code>lsblk</code>来查看所有块设备的信息，其中就包括我们的硬盘、光驱等：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ lsblk</span><br><span class="line">NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">loop0                       7:0    0 48.9M  1 loop /snap/core18/2127</span><br><span class="line">loop1                       7:1    0 28.1M  1 loop /snap/snapd/12707</span><br><span class="line">loop2                       7:2    0   62M  1 loop /snap/lxd/21032</span><br><span class="line">sr0                        11:0    1 1024M  0 rom  </span><br><span class="line">nvme0n1                   259:0    0   20G  0 disk </span><br><span class="line">├─nvme0n1p1               259:1    0  512M  0 part /boot/efi</span><br><span class="line">├─nvme0n1p2               259:2    0    1G  0 part /boot</span><br><span class="line">└─nvme0n1p3               259:3    0 18.5G  0 part </span><br><span class="line">  └─ubuntu--vg-ubuntu--lv 253:0    0 18.5G  0 lvm  /</span><br></pre></td></tr></table></figure><p>可以看到nvme开头的就是我们的硬盘（这个因人而异，可能你们的是sda，磁盘类型不同名称就不同）可以看到<code>nvme0n1  </code>容量为20G，并且512M用作存放EFI文件，1G存放启动文件，剩余容量就是存放系统文件和我们的用户目录。</p><p>这里要提到一个挂载的概念：</p><blockquote><p>挂载，指的就是将设备文件中的顶级目录连接到 Linux 根目录下的某一目录（最好是空目录），访问此目录就等同于访问设备文件。</p></blockquote><p>比如我们的主硬盘，挂载点就被设定为<code>/</code>根目录，而我们所有保存的文件都会存储在硬盘中，如果你有U盘（最好将U盘的文件格式改为ExFat，可以直接在Windows中进行格式化，然后随便放入一些文件即可）之类的东西，我们可以演示一下对U盘进行挂载：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ sudo fdisk -l</span><br><span class="line">...</span><br><span class="line">Disk /dev/sda: 60 GiB, 64424509440 bytes, 125829120 sectors</span><br><span class="line">Disk model: USB DISK        </span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x4a416279</span><br><span class="line"></span><br><span class="line">Device     Boot     Start       End   Sectors  Size Id Type</span><br><span class="line">/dev/sda1  *       614400 125214719 124600320 59.4G  7 HPFS/NTFS/exFAT</span><br><span class="line">/dev/sda2       125214720 125825022    610303  298M  6 FAT16</span><br></pre></td></tr></table></figure><p>将U盘插入电脑，选择连接到Linux，输入<code>sudo fdisk -l</code>命令来查看硬盘实体情况，可以看到有一个USB DISK设备，注意观察一下是不是和自己的U盘容量一致，可以看到设备名称为<code>/dev/sda1</code>。</p><p>接着我们设备挂载到一个目录下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">mkdir</span> u-test</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ sudo mount /dev/sda1 u-test/</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">cd</span> u-test/</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~/u-test$ <span class="built_in">ls</span></span><br><span class="line"> CGI</span><br><span class="line"> cn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24.iso</span><br><span class="line"> cn_windows_7_professional_x64_dvd_x15-65791.iso</span><br><span class="line"> cn_windows_8.1_enterprise_with_update_x64_dvd_6050374.iso</span><br><span class="line"> cn_windows_8.1_professional_vl_with_update_x64_dvd_4050293.iso</span><br><span class="line"> cn_windows_server_2019_updated_july_2020_x64_dvd_2c9b67da.iso</span><br><span class="line"><span class="string">&#x27;System Volume Information&#x27;</span></span><br><span class="line"> zh-cn_windows_10_consumer_editions_version_21h1_updated_sep_2021_x64_dvd_991b822f.iso</span><br><span class="line"> zh-cn_windows_11_consumer_editions_x64_dvd_904f13e4.iso</span><br></pre></td></tr></table></figure><p>最后进入到此目录中，就能看到你U盘中的文件了，如果你不想使用U盘了，可以直接取消挂载：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~/u-test$ cd ..</span><br><span class="line">test@ubuntu-server:~$ sudo umount /dev/sda1</span><br></pre></td></tr></table></figure><p>最后我们可以通过<code>df</code>命令查看当前磁盘使用情况：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ df -m</span><br><span class="line">Filesystem                        1M-blocks  Used Available Use% Mounted on</span><br><span class="line">udev                                   1900     0      1900   0% /dev</span><br><span class="line">tmpfs                                   392     2       391   1% /run</span><br><span class="line">/dev/mapper/ubuntu--vg-ubuntu--lv     18515  6544     11009  38% /</span><br><span class="line">tmpfs                                  1960     0      1960   0% /dev/shm</span><br><span class="line">tmpfs                                     5     0         5   0% /run/lock</span><br><span class="line">tmpfs                                  1960     0      1960   0% /sys/fs/cgroup</span><br><span class="line">/dev/nvme0n1p2                          976   109       800  12% /boot</span><br><span class="line">/dev/nvme0n1p1                          511     4       508   1% /boot/efi</span><br><span class="line">/dev/loop0                               49    49         0 100% /snap/core18/2127</span><br><span class="line">/dev/loop1                               29    29         0 100% /snap/snapd/12707</span><br><span class="line">/dev/loop2                               62    62         0 100% /snap/lxd/21032</span><br><span class="line">tmpfs                                   392     0       392   0% /run/user/1000</span><br></pre></td></tr></table></figure><p>输入<code>ps</code>可以查看当前运行的一些进程，其实和top有点类似，但是没有监控功能，只能显示当前的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ ps</span><br><span class="line">    PID TTY          TIME CMD</span><br><span class="line">  11438 pts/0    00:00:00 bash</span><br><span class="line">  11453 pts/0    00:00:00 ps</span><br></pre></td></tr></table></figure><p>添加-ef查看所有的进程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ ps -ef</span><br><span class="line">UID          PID    PPID  C STIME TTY          TIME CMD</span><br><span class="line">root           1       0  0 04:55 ?        00:00:02 /sbin/init</span><br><span class="line">root           2       0  0 04:55 ?        00:00:00 [kthreadd]</span><br><span class="line">root           3       2  0 04:55 ?        00:00:00 [rcu_gp]</span><br><span class="line">root           4       2  0 04:55 ?        00:00:00 [rcu_par_gp]</span><br><span class="line">root           6       2  0 04:55 ?        00:00:00 [kworker/0:0H-kblockd]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>我们可以找到对应的进程ID（PID），使用kill命令将其强制终止：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ ps</span><br><span class="line">    PID TTY          TIME CMD</span><br><span class="line">  11438 pts/0    00:00:00 bash</span><br><span class="line">  11455 pts/0    00:00:00 ps</span><br><span class="line">test@ubuntu-server:~$ kill -9 11438</span><br><span class="line">Connection to 192.168.10.6 closed.</span><br></pre></td></tr></table></figure><p>比如我们可以将当前会话的bash给杀死，那么会导致我们的连接直接断开，其中-9是一个信号，表示杀死进程：</p><ul><li>1 (HUP)：重新加载进程。</li><li>9 (KILL)：杀死一个进程。</li><li>15 (TERM)：正常停止一个进程。</li></ul><p>最后如果我们想要正常关机，只需要输入shutdown即可，系统会创建一个关机计划，并在指定时间关机，或是添加now表示立即关机：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">test@ubuntu-server:~$ sudo shutdown</span><br><span class="line">[sudo] password for test: </span><br><span class="line">Shutdown scheduled for Mon 2022-01-24 11:46:18 UTC, use &#x27;shutdown -c&#x27; to cancel.</span><br><span class="line">test@ubuntu-server:~$ sudo shutdown now</span><br><span class="line">Connection to 192.168.10.6 closed by remote host.</span><br><span class="line">Connection to 192.168.10.6 closed.</span><br></pre></td></tr></table></figure><h3 id="压缩解压"><a href="#压缩解压" class="headerlink" title="压缩解压"></a>压缩解压</h3><p>比较常用的压缩和解压也是重点，我们在Windows中经常需要下载一些压缩包，并且将压缩包解压才能获得里面的文件，而Linux中也支持文件的压缩和解压。</p><p>这里我们使用<code>tar</code>命令来完成文件亚索和解压操作，在Linux中比较常用的是gzip格式，后缀名一般为.gz，tar命令的参数-c表示对文件进行压缩，创建新的压缩文件，-x表示进行解压操作，-z表示以gzip格式进行操作，-v可以在处理过程中输出一些日志信息，-f表示对普通文件进行操作，这里我们创建三个文件并对这三个文件进行打包：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ tar -zcvf test.tar.gz *.txt</span><br><span class="line">1.txt</span><br><span class="line">2.txt</span><br><span class="line">3.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">1.txt  2.txt  3.txt  test.tar.gz</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ </span><br></pre></td></tr></table></figure><p>接着我们删除刚刚三个文件，再执行解压操作，得到压缩包中文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">rm</span> *.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">test.tar.gz</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ tar -zxvf test.tar.gz </span><br><span class="line">1.txt</span><br><span class="line">2.txt</span><br><span class="line">3.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">1.txt  2.txt  3.txt  test.tar.gz</span><br></pre></td></tr></table></figure><p>同样的，我们也可以对一个文件夹进行打包：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">mv</span> *.txt <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ tar -zcvf test.tar.gz <span class="built_in">test</span>/</span><br><span class="line"><span class="built_in">test</span>/</span><br><span class="line"><span class="built_in">test</span>/1.txt</span><br><span class="line"><span class="built_in">test</span>/2.txt</span><br><span class="line"><span class="built_in">test</span>/3.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">rm</span> -r <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line">test.tar.gz </span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ tar -zxvf test.tar.gz </span><br><span class="line"><span class="built_in">test</span>/</span><br><span class="line"><span class="built_in">test</span>/1.txt</span><br><span class="line"><span class="built_in">test</span>/2.txt</span><br><span class="line"><span class="built_in">test</span>/3.txt</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">test</span>  test.tar.gz</span><br><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ <span class="built_in">ls</span> <span class="built_in">test</span></span><br><span class="line">1.txt  2.txt  3.txt</span><br></pre></td></tr></table></figure><p>到此，Linux的一些基本命令就讲解为止。</p><hr><h2 id="vim文本编辑器"><a href="#vim文本编辑器" class="headerlink" title="vim文本编辑器"></a>vim文本编辑器</h2><p>和Windows中的记事本一样，Linux中也有文本编辑器，叫做Vi编辑器，Ubuntu中内置了Vi编辑器的升级版Vim，我们这里就讲解Vim编辑器的使用。</p><p>我们可以直接输入<code>vim 文件名称</code>来使用Vim编辑器对文本文件进行编辑：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu-server:~$ vim hello.txt</span><br></pre></td></tr></table></figure><p>进入编辑器之后，我们发现界面变成了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">~                                                                                                                                                                                         </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">&quot;hello.txt&quot; [New File]                                                            0,0-1         All</span><br></pre></td></tr></table></figure><p>这时我们直接输入内容是无法完成的，因为默认进入之后为<code>命令模式</code>，Vim编辑器默认有三种模式：</p><p><img src="http://c.biancheng.net/uploads/allimg/180914/1-1P9141F35R32.jpg" alt="img"></p><ul><li>命令模式：此模式下可以输入任意的命令进行操作，所有的输入都被看做是命令输入，而不是文本编辑输入。</li><li>编辑模式：此模式下输入的任何内容都会以文本编辑方式写入到文件中，就像我们直接在Windows的记事本中写内容一样。</li><li>末行模式：此模式下用于输入一些复杂命令，会在最后一行进行复杂命令的输入。</li></ul><p>在命令模式下，我们可以直接按下键盘上的<code>i</code>，此命令表示进行插入操作，会自动切换到编辑模式，这时可以看到最下方变为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">~                                                                                                   </span><br><span class="line">-- INSERT --                                                                      1,1           All</span><br></pre></td></tr></table></figure><p>而这时我们所有的输入内容都可以直接写到文件中了，如果我们想回到命令模式，按下<code>Esc</code>键即可。</p><p>除了<code>i</code>以外，我们也可以按下<code>a</code>表示从当前光标所在位置之后继续写，与<code>i</code>不同的是，<code>i</code>会在光标之前继续写，<code>o</code>会直接跳到下一行，而<code>A</code>表示在当前行的最后继续写入，<code>I</code>表示在当前行的最前面继续写入。</p><p>这里我们随便粘贴一段文本信息进去（不要用Ctrl+V，Linux中没这操作，XShell右键点粘贴）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">I was hard on people sometimes, probably harder than I needed to be. </span><br><span class="line">I remember the time when Reed was six years old, coming home, and I had just fired somebody that day.</span><br><span class="line">And I imagined what it was like for that person to tell his family and his young son that he had lost his job. </span><br><span class="line">It was hard. </span><br><span class="line">But　somebody’s got to do it. </span><br><span class="line">I figured that it was always my job to make sure that the team was excellent, and if I didn’t do it, nobody was going to do it.</span><br><span class="line">You always have to keep pushing to innovate.</span><br><span class="line">Dylan could have sung protest songs forever and probably made a lot of money, but he didn’t. </span><br><span class="line">He had to move on, and when he did, by going electric in 1965, he alienated a lot of people.</span><br></pre></td></tr></table></figure><p>在我们编辑完成之后，需要进入到末行模式进行文件的保存并退出，按下<code>:</code>进入末行模式，再输入wq即可保存退出。</p><p>接着我们来看一些比较常用的命令，首先是命令模式下的光标移动命令：</p><ul><li>^   直接调到本行最前面</li><li>$   直接跳到本行最后面</li><li>gg  直接跳到第一行</li><li>[N]G    跳转到第N行</li><li>[N]方向键    向一个方向跳转N个字符</li></ul><p>在末行模式下，常用的复杂命令有：</p><ul><li>:set number    开启行号</li><li>:w    保存</li><li>:wq或:x    保存并关闭</li><li>:q    关闭</li><li>:q!    强制关闭</li></ul><p>我们可以输入<code>/</code>或是<code>?</code>在末行模式中使用搜索功能，比如我们要搜索单词<code>it</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/it  </span><br></pre></td></tr></table></figure><p>接着会在文本中出现高亮，按<code>n</code>跳转到下一个搜索结果，?是从后向前搜索，/是从前向后搜索。</p><p>它还支持替换功能，但是使用起来稍微比较复杂，语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:[addr]s/源字符串/目的字符串/[option]</span><br></pre></td></tr></table></figure><p>addr表示第几行或是一个范围，option表示操作类型：</p><ul><li>g: globe,表示全局替换</li><li>c: confirm,表示进行确认</li><li>p: 表示替代结果逐行显示(Ctrl + L恢复屏幕)</li><li>i:  ignore,不区分大小写</li></ul><p>比如我们要将当前行中的<code>it</code>全部替换为<code>he</code>，那么可以这样写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:s/it/he/g</span><br></pre></td></tr></table></figure><p>实际上除了以上三种模式外，还有一种模式叫做可视化模式，按下键盘上的<code>v</code>即可进入，它能够支持选取一段文本，选取后，我们可以对指定段落的文本内容快速进行复制、剪切、删除、插入等操作，非常方便。在此模式下，我们可以通过上下左右键进行选取，以进入可视化模式时的位置作为基本位置，通过移动另一端来进行选取。</p><p>我们可以使用以下命令来对选中区域进行各种操作：</p><ul><li>y   复制选中区域</li><li>d/x   剪切（删除）选中区域</li><li>p  粘贴</li><li>u  撤销上一步</li></ul><p>当然，这些命令在命令模式下也可以使用，但是可视化模式下使用更适合一些。</p>]]></content>
    
    
    <summary type="html">对使用Ubuntu操作系统进行虚拟机配置以及Linux环境下的常用操作进行了一些记录</summary>
    
    
    
    <category term="操作系统" scheme="https://programmercharlie.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="Linux" scheme="https://programmercharlie.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
