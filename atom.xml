<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CharlieFei&#39;s Blog ~ ❥(^_-)</title>
  
  
  <link href="https://programmercharlie.github.io/atom.xml" rel="self"/>
  
  <link href="https://programmercharlie.github.io/"/>
  <updated>2022-12-05T06:25:00.000Z</updated>
  <id>https://programmercharlie.github.io/</id>
  
  <author>
    <name>Charlie Fei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NodeJS的安装及配置</title>
    <link href="https://programmercharlie.github.io/2022/12/05/Nodejs/"/>
    <id>https://programmercharlie.github.io/2022/12/05/Nodejs/</id>
    <published>2022-12-05T06:25:00.000Z</published>
    <updated>2022-12-05T06:25:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="windows安装"><a href="#windows安装" class="headerlink" title="windows安装"></a>windows安装</h2><blockquote><p>Node.js 官方网站下载：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a><br>LTS 长期支持版 ： 实际业务开发中使用 ，稳定 安全<br>current 最新版 ： 尝鲜与学习新特性使用 ，包含最新特性<br>Node中文网 ： <a href="http://nodejs.cn/">http://nodejs.cn/</a>  </p></blockquote><p><img src="https://files.catbox.moe/jfiqbc.png" alt="install"></p><p>点击安装包下载，安装node</p><blockquote><p>PS：默认安装到C盘 不建议修改路径<br>安装完后，可以在命令行cmd中输入node -v 来查看安装版本和是否安装成功</p></blockquote><p><img src="https://files.catbox.moe/6neiep.png" alt="cmd"></p><h2 id="Mac-OS-上安装"><a href="#Mac-OS-上安装" class="headerlink" title="Mac OS 上安装"></a>Mac OS 上安装</h2><blockquote><p>可以通过以下两种方式在 Mac OS 上来安装 node：</p><ul><li>在官方下载网站下载 pkg 安装包，直接点击安装即可。</li><li>使用 brew 命令来安装： </li></ul> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure></blockquote><h2 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h2><ul><li>CMD 全称 command，即命令提示符，是微软Windows系统的命令行程序（可解释为<br>Commander.exe），类似于微软的 DOS 操作系统。</li><li>PowerShell Win10下新增的管理工具,是一种跨平台的任务自动化和配置管理框架，由命令行管理<br>程序和脚本语言组成</li><li>Vscode//Webstorm etc. 内置终端  </li></ul><h3 id="CMD基础命令"><a href="#CMD基础命令" class="headerlink" title="CMD基础命令"></a>CMD基础命令</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /? #获取使用帮助</span><br><span class="line"><span class="built_in">cd</span> \ #跳转到硬盘的根目录</span><br><span class="line"><span class="built_in">cd</span> C:\WINDOWS #跳转到当前硬盘的其他文件</span><br><span class="line"><span class="function">d: #跳转到其他硬盘</span></span><br><span class="line"><span class="function"><span class="title">cd</span> /<span class="title">d</span> <span class="title">e</span>:\<span class="title">software</span> #跳转到其他硬盘的其他文件夹 注意此处必须加/<span class="title">d</span>参数。否则无法跳转。</span></span><br><span class="line"><span class="function"><span class="title">cd</span>.. #跳转到上一层目录</span></span><br><span class="line"><span class="function"><span class="title">ipconfig</span> #展示当前<span class="title">TCP</span>/<span class="title">IP</span>协议设置值 主要用来查看<span class="title">IP</span>地址 子网掩码 网关</span></span><br><span class="line"><span class="function"><span class="title">dir</span> #查看查看当前目录下的文件与文件夹信息</span></span><br><span class="line"><span class="function"><span class="title">edit</span> <span class="title">filename</span> #修改文件中的内容（英文模式）</span></span><br><span class="line"><span class="function"><span class="title">notepad</span> <span class="title">filename</span> #修改文件中的内容（中文模式）</span></span><br><span class="line"><span class="function"><span class="title">copy</span> <span class="title">filename</span> <span class="title">foldername</span> #复制文件到指定文件夹</span></span><br><span class="line"><span class="function"><span class="title">del</span> <span class="title">filename</span> #删除文件</span></span><br><span class="line"><span class="function"><span class="title">move</span> <span class="title">filename</span> <span class="title">foldername</span> #移动文件到指定文件夹（剪切）</span></span><br><span class="line"><span class="function"><span class="title">mkdir</span>/<span class="title">md</span> <span class="title">foldername</span> #建立新的文件夹</span></span><br></pre></td></tr></table></figure><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><p>npm,全称【node package management】，是nodejs内置的软件包管理器。毫无疑问，npm是用来<br>管理软件包的。<br>它是世界上最大的软件注册表，每星期大约有30亿次的下载量，包含超过600000个包(包)(即，代码模<br>块)。来自各大洲的开源软件开发者使用NPM互相分享和借鉴.包的结构使您能够轻松跟踪依赖项和版<br>本。  </p><h3 id="npm的使用方法"><a href="#npm的使用方法" class="headerlink" title="npm的使用方法"></a>npm的使用方法</h3><p>因为nodejs软件内置了npm，所以windows系统在安装nodejs后，打开cmd即可使用npm下载资源</p><ul><li>查看npm安装信息与默认下载路径  </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config ls</span><br></pre></td></tr></table></figure><ul><li>查看全局默认目录  </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm root -g</span><br></pre></td></tr></table></figure><ol><li>修改全局与缓存地址<br>在D盘 nodejs 目录下创建两个目录，分别是 node_cache 和 node_global，这是用来放安装过程的缓存文<br>件以及最终的模块配置位置。配置完成后，cmd中执行下面这两个命令：  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\Program Files\nodejs\node_global&quot;</span><br><span class="line">npm config set cache &quot;D:\Program Files\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure><ol start="2"><li>修改环境变量<br>配置 npm 的环境变量和 nodejs 的环境变量。在计算机图标上点右键，选属性，然后点击高级系统<br>配置，弹出来的新窗口右下角有个环境路径，点击去，就能看到环境路径的配置界面，我们点击新<br>建。然后在弹出来的窗口里，变量名填：NODE_PATH<br>获取<br>变量值填：D:\Program Files\nodejs\node_modules<br>点击确定<br>编辑Path变量<br>找到npm项修改为：D:\Program Files\nodejs\node_global\  </li></ol><ol start="3"><li>修改仓库地址<br>命令:  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">//或者</span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line">/*</span><br><span class="line">registry_url指的是国内提供的一些npm仓库地址，常用的有：</span><br><span class="line">https://registry.npm.taobao.org</span><br><span class="line">http://r.cnpmjs.org/</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h3 id="npm常用的命令："><a href="#npm常用的命令：" class="headerlink" title="npm常用的命令："></a>npm常用的命令：</h3><ol><li>安装包（如果没有指定版本号，那么安装最新版本） </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g 包名称（全局安装）</span><br><span class="line">npm install包名称（本地安装）</span><br></pre></td></tr></table></figure><ol start="2"><li>安装包的时候可以指定版本  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g 包名称@版本号</span><br></pre></td></tr></table></figure><ol start="3"><li>卸载包  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall -g 包名称</span><br></pre></td></tr></table></figure><ol start="4"><li>更新包（更新到最新版本）  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update -g 包名称</span><br></pre></td></tr></table></figure><ol start="5"><li>查看全局模块列表  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm list -g</span><br></pre></td></tr></table></figure><ol start="6"><li>查看包所依赖的Node的版本  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm view 包名称 engines</span><br></pre></td></tr></table></figure><ol start="7"><li>查看包源文件地址  </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm view 包名称 repository.url</span><br></pre></td></tr></table></figure><blockquote><p>开发环境（平时开发使用的环境）<br>生产环境（项目部署上线之后的服务器环境）<br>–save 向生产环境添加依赖 dependencies<br>–save-dev 向开发环境添加依赖 devDependencies  </p></blockquote><p>区别：</p><ul><li><p>npm install xxx 安装到项目目录的node_modules文件夹下，但是不会添加任何依赖（依赖写在<br>package.json文件中）</p></li><li><p>npm install xxx -g 全局安装，安装到你安装npm的磁盘目录下</p></li><li><p>npm install xxx –save 安装到项目目录的node_modules文件夹下，添加到dependencies的依赖下<br>（生产环境中：项目发布到服务器上必须要使用的包）</p></li><li><p>npm install xxx –save-dev 安装到项目目录的node_modules文件夹下，添加到devdependencies的依<br>赖下（开发环境中：测试、管理，只在程序员模式下需要）  </p></li></ul>]]></content>
    
    
    <summary type="html">对NodeJS的安装及配置进行详细记录，并记载了一些npm命令</summary>
    
    
    
    <category term="Frontend Develop" scheme="https://programmercharlie.github.io/categories/Frontend-Develop/"/>
    
    
    <category term="NodeJS" scheme="https://programmercharlie.github.io/tags/NodeJS/"/>
    
  </entry>
  
</feed>
